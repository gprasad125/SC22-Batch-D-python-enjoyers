{"backend_state":"running","connection_file":"/projects/a2965908-ba18-4335-af0a-8fe3955e8e18/.local/share/jupyter/runtime/kernel-42160a68-2455-4abb-aecd-0c35280714a3.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1661361019576,"exec_count":1,"id":"e0690a","input":"# Import Pandas and NumPy\nimport pandas as pd\nimport numpy as np","kernel":"python3-ubuntu","pos":1,"start":1661361019060,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361019595,"exec_count":2,"id":"b1919d","input":"# Reads the data into a dataframe\nmilk = pd.read_csv(\"Data/milk.csv\")","kernel":"python3-ubuntu","pos":2,"start":1661361019587,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361020025,"exec_count":3,"id":"b518ac","input":"# Fix errors in column names\nmilk.rename(columns = {\"Temprature\": \"Temperature\", \"Fat \": \"Fat\", \"Colour\": \"Color\"}, inplace = True)","kernel":"python3-ubuntu","pos":3,"start":1661361020019,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361021206,"exec_count":4,"id":"e18347","input":"# Prints top 5 rows\nmilk.head()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pH</th>\n      <th>Temperature</th>\n      <th>Taste</th>\n      <th>Odor</th>\n      <th>Fat</th>\n      <th>Turbidity</th>\n      <th>Color</th>\n      <th>Grade</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6.6</td>\n      <td>35</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>254</td>\n      <td>high</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6.6</td>\n      <td>36</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>253</td>\n      <td>high</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8.5</td>\n      <td>70</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>246</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>9.5</td>\n      <td>34</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>255</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6.6</td>\n      <td>37</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>255</td>\n      <td>medium</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    pH  Temperature  Taste  Odor  Fat  Turbidity  Color   Grade\n0  6.6           35      1     0    1          0    254    high\n1  6.6           36      0     1    0          1    253    high\n2  8.5           70      1     1    1          1    246     low\n3  9.5           34      1     1    0          1    255     low\n4  6.6           37      0     0    0          0    255  medium"},"exec_count":4}},"pos":4,"start":1661361021164,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361022238,"exec_count":5,"id":"52f113","input":"# Checks how many rows there are\nlen(milk)","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"1059"},"exec_count":5}},"pos":5,"start":1661361022231,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361023360,"exec_count":6,"id":"e189ab","input":"# Checks how many rows are high, medium, and low\nlen(milk[milk[\"Grade\"] == \"high\"])","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"256"},"exec_count":6}},"pos":6,"start":1661361023350,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361028502,"exec_count":7,"id":"a27599","input":"# Drops null values if there are any\nmilk.dropna(inplace = True)\nmilk.reset_index(drop = True, inplace = True)","kernel":"python3-ubuntu","pos":9,"start":1661361028478,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361034184,"exec_count":8,"id":"c94506","input":"# Sets target and input\ntarget = milk[\"Grade\"]\ninput_columns = milk.drop(columns = [\"Grade\"])","kernel":"python3-ubuntu","pos":11,"start":1661361034174,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361036321,"exec_count":9,"id":"e17b85","input":"# Data Split\nimport sklearn\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)","kernel":"python3-ubuntu","pos":12,"start":1661361035236,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361038515,"exec_count":10,"id":"1ca8ed","input":"# We are going to do K Nearest Neighbors\nfrom sklearn.neighbors import KNeighborsClassifier as KNN ","kernel":"python3-ubuntu","pos":14,"start":1661361038368,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361039342,"exec_count":11,"id":"6a4d39","input":"# Creating the KNN model object \nmilk_KNN = KNN(n_neighbors = 7)","kernel":"python3-ubuntu","pos":15,"start":1661361039334,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361041069,"exec_count":12,"id":"5f3875","input":"# Fit data\nmilk_KNN.fit(x_train, y_train)","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"KNeighborsClassifier(n_neighbors=7)"},"exec_count":12}},"pos":16,"start":1661361041036,"state":"done","type":"cell"}
{"cell_type":"code","end":1661361049228,"exec_count":13,"id":"4ffdb4","input":"# Predict data\ny_hat = milk_KNN.predict(x_test)\ny_hat","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"array(['medium', 'medium', 'high', 'medium', 'high', 'high', 'high',\n       'low', 'medium', 'low', 'medium', 'high', 'low', 'high', 'medium',\n       'high', 'low', 'low', 'low', 'medium', 'medium', 'low', 'low',\n       'low', 'high', 'high', 'low', 'low', 'high', 'low', 'medium',\n       'medium', 'high', 'low', 'medium', 'medium', 'medium', 'low',\n       'medium', 'high', 'low', 'medium', 'low', 'low', 'low', 'medium',\n       'high', 'medium', 'medium', 'medium', 'medium', 'low', 'high',\n       'medium', 'high', 'high', 'high', 'low', 'high', 'low', 'low',\n       'high', 'low', 'medium', 'high', 'medium', 'low', 'high', 'low',\n       'medium', 'high', 'medium', 'low', 'medium', 'high', 'high',\n       'high', 'low', 'low', 'high', 'medium', 'medium', 'medium',\n       'medium', 'medium', 'medium', 'high', 'low', 'medium', 'medium',\n       'medium', 'medium', 'medium', 'medium', 'medium', 'low', 'high',\n       'low', 'low', 'low', 'high', 'medium', 'medium', 'high', 'medium',\n       'medium', 'medium', 'medium', 'medium', 'low', 'low', 'low', 'low',\n       'low', 'high', 'low', 'low', 'medium', 'medium', 'medium',\n       'medium', 'low', 'low', 'high', 'low', 'low', 'low', 'low', 'high',\n       'low', 'low', 'high', 'low', 'low', 'low', 'low', 'medium',\n       'medium', 'low', 'low', 'medium', 'low', 'low', 'low', 'medium',\n       'low', 'high', 'high', 'low', 'medium', 'low', 'medium', 'low',\n       'medium', 'low', 'high', 'high', 'high', 'medium', 'low', 'low',\n       'low', 'low', 'medium', 'high', 'medium', 'low', 'medium', 'low',\n       'medium', 'medium', 'low', 'medium', 'low', 'high', 'low', 'high',\n       'low', 'low', 'low', 'medium', 'low', 'high', 'high', 'high',\n       'high', 'medium', 'medium', 'high', 'medium', 'low', 'medium',\n       'low', 'high', 'medium', 'medium', 'low', 'high', 'low', 'high',\n       'low', 'high', 'high', 'low', 'medium', 'low', 'high', 'medium',\n       'low', 'medium', 'low', 'low'], dtype=object)"},"exec_count":13}},"pos":17,"start":1661361049209,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"64c8b6","input":"#","pos":49,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"66763f","input":"# Confusion Matrix / MLP\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","pos":34,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"908e07","input":"# Accuracy / KNN\ncomparisons = np.array(y_hat == y_test)\ncomparisons.mean()","output":{"0":{"data":{"text/plain":"0.9905660377358491"},"exec_count":12,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":131,"id":"ae6d8b","input":"from sklearn.neural_network import MLPClassifier\nmilk_mlp = MLPClassifier()\nmilk_mlp.fit(x_train, y_train)\ny_hat = milk_mlp.predict(x_test)","pos":32,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"184390","input":"# Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nknnmatrix = sns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')\n","output":{"0":{"data":{"image/png":"4ad48b485aeff03aaee172139af03d4c71f73ee7","text/plain":"<Figure size 864x504 with 2 Axes>"},"exec_count":14,"metadata":{"image/png":{"height":411,"width":638},"needs_background":"light"},"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":147,"id":"d2d01b","input":"#Accuracy / GPK\ncomparisons = np.array(y_hat == y_test)\ncomparisons.mean()","output":{"0":{"data":{"text/plain":"0.9339622641509434"},"exec_count":147,"output_type":"execute_result"}},"pos":47,"type":"cell"}
{"cell_type":"code","exec_count":148,"id":"5f3b34","input":"#Confusion Chart / GPK\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7fef8f9623a0>"},"exec_count":148,"output_type":"execute_result"},"1":{"data":{"image/png":"1e1c3448f57296ff7f96c847aa43bdbcc422d78f","text/plain":"<Figure size 864x504 with 2 Axes>"},"exec_count":148,"metadata":{"image/png":{"height":411,"width":638},"needs_background":"light"},"output_type":"execute_result"}},"pos":48,"type":"cell"}
{"cell_type":"code","exec_count":149,"id":"7cf92e","input":"from sklearn.model_selection import GridSearchCV\nparameters = {\n    \"C\": [0.5, 0.7, 0.9, 1.1, 1.3],\n    \"degree\": [1, 2, 4, 10, 12],\n    \"kernel\": [\"linear\", \"sigmoid\", \"poly\"]\n}\n\noptimizer = GridSearchCV(SVC(), param_grid = parameters, verbose = 2)\noptimizer.fit(x_train, y_train)","pos":28,"type":"cell"}
{"cell_type":"code","exec_count":154,"id":"a9d6d1","input":"optimizer.best_params_","output":{"0":{"data":{"text/plain":"{'C': 1.3, 'degree': 1, 'kernel': 'linear'}"},"exec_count":154,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":49,"id":"d0d4d5","input":"from sklearn.model_selection import GridSearchCV\n#parameters = {\n    \"max_iter\": [400, 600, 800, 1000],\n    \"solver\": ['lbfgs', 'sgd', 'adam'],\n    \"activation\": [\"relu\", \"tanh\", \"logistic\", \"identity\"]\n}\n\n#optimizer = GridSearchCV(MLPClassifier(), param_grid = parameters, verbose = 2)\n#optimizer.fit(x_train, y_train)\n#optimizer.best_params_","output":{"0":{"name":"stdout","output_type":"stream","text":"Fitting 5 folds for each of 60 candidates, totalling 300 fits\n"},"1":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"10":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=relu, max_iter=200, solver=sgd; total time=   0.3s\n[CV] END ..........activation=relu, max_iter=200, solver=sgd; total time=   0.1s\n[CV] END ..........activation=relu, max_iter=200, solver=sgd; total time=   0.1s\n"},"100":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=tanh, max_iter=400, solver=sgd; total time=   0.1s\n[CV] END ..........activation=tanh, max_iter=400, solver=sgd; total time=   0.0s\n[CV] END ..........activation=tanh, max_iter=400, solver=sgd; total time=   0.1s\n"},"101":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=tanh, max_iter=400, solver=sgd; total time=   0.2s\n"},"102":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=400, solver=adam; total time=   0.7s\n"},"103":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=400, solver=adam; total time=   0.9s\n"},"104":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=400, solver=adam; total time=   0.9s\n"},"105":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=400, solver=adam; total time=   0.9s\n"},"106":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=400, solver=adam; total time=   0.7s\n"},"107":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"108":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=600, solver=lbfgs; total time=   1.2s\n"},"109":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"11":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"110":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=600, solver=lbfgs; total time=   0.9s\n"},"111":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"112":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=600, solver=lbfgs; total time=   1.0s\n"},"113":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"114":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=600, solver=lbfgs; total time=   0.9s\n"},"115":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"116":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=600, solver=lbfgs; total time=   1.0s\n[CV] END ..........activation=tanh, max_iter=600, solver=sgd; total time=   0.0s\n[CV] END ..........activation=tanh, max_iter=600, solver=sgd; total time=   0.1s\n"},"117":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=tanh, max_iter=600, solver=sgd; total time=   0.1s\n[CV] END ..........activation=tanh, max_iter=600, solver=sgd; total time=   0.0s\n"},"118":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=tanh, max_iter=600, solver=sgd; total time=   0.2s\n"},"119":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=600, solver=adam; total time=   0.8s\n"},"12":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=200, solver=adam; total time=   0.5s\n"},"120":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=600, solver=adam; total time=   0.9s\n"},"121":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=600, solver=adam; total time=   0.5s\n"},"122":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=600, solver=adam; total time=   1.0s\n"},"123":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=600, solver=adam; total time=   1.0s\n"},"124":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"125":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=800, solver=lbfgs; total time=   1.4s\n"},"126":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"127":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=800, solver=lbfgs; total time=   1.5s\n"},"128":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=800, solver=lbfgs; total time=   0.4s\n"},"129":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"13":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"130":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=800, solver=lbfgs; total time=   1.3s\n"},"131":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"132":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=800, solver=lbfgs; total time=   1.3s\n[CV] END ..........activation=tanh, max_iter=800, solver=sgd; total time=   0.1s\n"},"133":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=tanh, max_iter=800, solver=sgd; total time=   0.2s\n[CV] END ..........activation=tanh, max_iter=800, solver=sgd; total time=   0.1s\n[CV] END ..........activation=tanh, max_iter=800, solver=sgd; total time=   0.1s\n"},"134":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=tanh, max_iter=800, solver=sgd; total time=   0.1s\n"},"135":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=800, solver=adam; total time=   0.9s\n"},"136":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=800, solver=adam; total time=   0.7s\n"},"137":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=800, solver=adam; total time=   1.3s\n"},"138":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=800, solver=adam; total time=   1.0s\n"},"139":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=800, solver=adam; total time=   0.6s\n[CV] END .......activation=tanh, max_iter=1000, solver=lbfgs; total time=   0.0s\n"},"14":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=200, solver=adam; total time=   0.5s\n"},"140":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"141":{"name":"stdout","output_type":"stream","text":"[CV] END .......activation=tanh, max_iter=1000, solver=lbfgs; total time=   1.5s\n"},"142":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"143":{"name":"stdout","output_type":"stream","text":"[CV] END .......activation=tanh, max_iter=1000, solver=lbfgs; total time=   1.5s\n"},"144":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"145":{"name":"stdout","output_type":"stream","text":"[CV] END .......activation=tanh, max_iter=1000, solver=lbfgs; total time=   1.5s\n[CV] END .......activation=tanh, max_iter=1000, solver=lbfgs; total time=   0.1s\n[CV] END .........activation=tanh, max_iter=1000, solver=sgd; total time=   0.1s\n"},"146":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=1000, solver=sgd; total time=   0.1s\n[CV] END .........activation=tanh, max_iter=1000, solver=sgd; total time=   0.1s\n"},"147":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=1000, solver=sgd; total time=   0.2s\n[CV] END .........activation=tanh, max_iter=1000, solver=sgd; total time=   0.1s\n"},"148":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=1000, solver=adam; total time=   0.9s\n"},"149":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=1000, solver=adam; total time=   0.8s\n"},"15":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"150":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=1000, solver=adam; total time=   0.7s\n"},"151":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=1000, solver=adam; total time=   0.8s\n"},"152":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=1000, solver=adam; total time=   0.8s\n"},"153":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"154":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=200, solver=lbfgs; total time=   0.6s\n"},"155":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"156":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=200, solver=lbfgs; total time=   0.5s\n"},"157":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"158":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=200, solver=lbfgs; total time=   0.5s\n"},"159":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"16":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=200, solver=adam; total time=   0.5s\n"},"160":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=200, solver=lbfgs; total time=   0.5s\n"},"161":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"162":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=200, solver=lbfgs; total time=   0.5s\n"},"163":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"164":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=200, solver=sgd; total time=   0.6s\n"},"165":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"166":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=200, solver=sgd; total time=   0.6s\n"},"167":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"168":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=200, solver=sgd; total time=   0.5s\n"},"169":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"17":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=200, solver=adam; total time=   0.2s\n"},"170":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=200, solver=sgd; total time=   0.5s\n"},"171":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"172":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=200, solver=sgd; total time=   0.5s\n"},"173":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"174":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=200, solver=adam; total time=   0.6s\n"},"175":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"176":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=200, solver=adam; total time=   0.6s\n"},"177":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"178":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=200, solver=adam; total time=   0.6s\n"},"179":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=200, solver=adam; total time=   0.5s\n"},"18":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"180":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"181":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=200, solver=adam; total time=   0.6s\n"},"182":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"183":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=400, solver=lbfgs; total time=   1.0s\n"},"184":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"185":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=400, solver=lbfgs; total time=   1.0s\n"},"186":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"187":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=400, solver=lbfgs; total time=   1.1s\n"},"188":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"189":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=400, solver=lbfgs; total time=   1.0s\n"},"19":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=200, solver=adam; total time=   0.5s\n"},"190":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"191":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=400, solver=lbfgs; total time=   1.1s\n"},"192":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (400) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"193":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=400, solver=sgd; total time=   1.1s\n"},"194":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=400, solver=sgd; total time=   1.0s\n"},"195":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=400, solver=sgd; total time=   0.8s\n"},"196":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=400, solver=sgd; total time=   0.6s\n"},"197":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=400, solver=sgd; total time=   0.8s\n"},"198":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (400) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"199":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=400, solver=adam; total time=   1.1s\n"},"2":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=200, solver=lbfgs; total time=   0.4s\n"},"20":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=400, solver=lbfgs; total time=   0.4s\n[CV] END ........activation=relu, max_iter=400, solver=lbfgs; total time=   0.1s\n"},"200":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (400) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"201":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=400, solver=adam; total time=   1.1s\n"},"202":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (400) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"203":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=400, solver=adam; total time=   1.2s\n"},"204":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:699: UserWarning: Training interrupted by user.\n  warnings.warn(\"Training interrupted by user.\")\n"},"205":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=400, solver=adam; total time=   0.6s\n"},"206":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (400) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"207":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=400, solver=adam; total time=   1.1s\n"},"208":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"209":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=600, solver=lbfgs; total time=   1.6s\n[CV] END ....activation=logistic, max_iter=600, solver=lbfgs; total time=   0.1s\n"},"21":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"210":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"211":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=600, solver=lbfgs; total time=   1.7s\n"},"212":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"213":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=600, solver=lbfgs; total time=   1.5s\n"},"214":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"215":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=600, solver=lbfgs; total time=   1.5s\n"},"216":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=600, solver=sgd; total time=   0.9s\n"},"217":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=600, solver=sgd; total time=   0.8s\n"},"218":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=600, solver=sgd; total time=   0.7s\n"},"219":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:699: UserWarning: Training interrupted by user.\n  warnings.warn(\"Training interrupted by user.\")\n"},"22":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=400, solver=lbfgs; total time=   0.5s\n"},"220":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=600, solver=sgd; total time=   0.4s\n"},"221":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=600, solver=sgd; total time=   0.5s\n"},"222":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=600, solver=adam; total time=   1.6s\n"},"223":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=600, solver=adam; total time=   1.4s\n"},"224":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:699: UserWarning: Training interrupted by user.\n  warnings.warn(\"Training interrupted by user.\")\n"},"225":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=600, solver=adam; total time=   1.6s\n"},"226":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=600, solver=adam; total time=   0.7s\n"},"227":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (600) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"228":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=600, solver=adam; total time=   1.7s\n"},"229":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"23":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"230":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=800, solver=lbfgs; total time=   2.1s\n"},"231":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"232":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=800, solver=lbfgs; total time=   1.9s\n"},"233":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"234":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=800, solver=lbfgs; total time=   2.3s\n"},"235":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"236":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=800, solver=lbfgs; total time=   2.0s\n"},"237":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"238":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=800, solver=lbfgs; total time=   2.1s\n"},"239":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=800, solver=sgd; total time=   0.8s\n"},"24":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=400, solver=lbfgs; total time=   0.6s\n"},"240":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=800, solver=sgd; total time=   0.7s\n"},"241":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=800, solver=sgd; total time=   0.7s\n"},"242":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=800, solver=sgd; total time=   1.1s\n"},"243":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=logistic, max_iter=800, solver=sgd; total time=   0.6s\n"},"244":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=800, solver=adam; total time=   2.0s\n"},"245":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=800, solver=adam; total time=   0.5s\n"},"246":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=800, solver=adam; total time=   1.9s\n"},"247":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (800) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"248":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=800, solver=adam; total time=   2.3s\n"},"249":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=800, solver=adam; total time=   2.0s\n"},"25":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=400, solver=lbfgs; total time=   0.2s\n[CV] END ..........activation=relu, max_iter=400, solver=sgd; total time=   0.2s\n"},"250":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"251":{"name":"stdout","output_type":"stream","text":"[CV] END ...activation=logistic, max_iter=1000, solver=lbfgs; total time=   2.6s\n[CV] END ...activation=logistic, max_iter=1000, solver=lbfgs; total time=   0.1s\n"},"252":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"253":{"name":"stdout","output_type":"stream","text":"[CV] END ...activation=logistic, max_iter=1000, solver=lbfgs; total time=   2.7s\n"},"254":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"255":{"name":"stdout","output_type":"stream","text":"[CV] END ...activation=logistic, max_iter=1000, solver=lbfgs; total time=   2.7s\n"},"256":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"257":{"name":"stdout","output_type":"stream","text":"[CV] END ...activation=logistic, max_iter=1000, solver=lbfgs; total time=   2.7s\n"},"258":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=1000, solver=sgd; total time=   1.1s\n"},"259":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=1000, solver=sgd; total time=   1.0s\n"},"26":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=relu, max_iter=400, solver=sgd; total time=   0.3s\n[CV] END ..........activation=relu, max_iter=400, solver=sgd; total time=   0.2s\n"},"260":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=1000, solver=sgd; total time=   0.7s\n"},"261":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=1000, solver=sgd; total time=   0.8s\n"},"262":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=logistic, max_iter=1000, solver=sgd; total time=   0.5s\n"},"263":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=1000, solver=adam; total time=   2.1s\n"},"264":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=1000, solver=adam; total time=   2.3s\n"},"265":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=1000, solver=adam; total time=   2.1s\n"},"266":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=1000, solver=adam; total time=   1.6s\n"},"267":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=logistic, max_iter=1000, solver=adam; total time=   1.9s\n"},"268":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"269":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=200, solver=lbfgs; total time=   0.2s\n[CV] END ....activation=identity, max_iter=200, solver=lbfgs; total time=   0.1s\n[CV] END ....activation=identity, max_iter=200, solver=lbfgs; total time=   0.0s\n"},"27":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=relu, max_iter=400, solver=sgd; total time=   0.1s\n[CV] END ..........activation=relu, max_iter=400, solver=sgd; total time=   0.1s\n"},"270":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"271":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=200, solver=lbfgs; total time=   0.2s\n[CV] END ....activation=identity, max_iter=200, solver=lbfgs; total time=   0.0s\n[CV] END ......activation=identity, max_iter=200, solver=sgd; total time=   0.1s\n"},"272":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=identity, max_iter=200, solver=sgd; total time=   0.1s\n[CV] END ......activation=identity, max_iter=200, solver=sgd; total time=   0.1s\n[CV] END ......activation=identity, max_iter=200, solver=sgd; total time=   0.1s\n"},"273":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=identity, max_iter=200, solver=sgd; total time=   0.1s\n[CV] END .....activation=identity, max_iter=200, solver=adam; total time=   0.2s\n"},"274":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=200, solver=adam; total time=   0.3s\n"},"275":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=200, solver=adam; total time=   0.2s\n"},"276":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=200, solver=adam; total time=   0.2s\n"},"277":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=200, solver=adam; total time=   0.2s\n"},"278":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"279":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=400, solver=lbfgs; total time=   0.4s\n"},"28":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=400, solver=adam; total time=   0.3s\n"},"280":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"281":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=400, solver=lbfgs; total time=   0.5s\n"},"282":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"283":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=400, solver=lbfgs; total time=   0.4s\n"},"284":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"285":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=400, solver=lbfgs; total time=   0.4s\n"},"286":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"287":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=400, solver=lbfgs; total time=   0.4s\n[CV] END ......activation=identity, max_iter=400, solver=sgd; total time=   0.1s\n[CV] END ......activation=identity, max_iter=400, solver=sgd; total time=   0.1s\n"},"288":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=identity, max_iter=400, solver=sgd; total time=   0.1s\n"},"289":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=identity, max_iter=400, solver=sgd; total time=   0.2s\n[CV] END ......activation=identity, max_iter=400, solver=sgd; total time=   0.1s\n"},"29":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=400, solver=adam; total time=   0.4s\n"},"290":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=400, solver=adam; total time=   0.3s\n[CV] END .....activation=identity, max_iter=400, solver=adam; total time=   0.2s\n"},"291":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=400, solver=adam; total time=   0.2s\n[CV] END .....activation=identity, max_iter=400, solver=adam; total time=   0.1s\n"},"292":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=400, solver=adam; total time=   0.2s\n"},"293":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"294":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=600, solver=lbfgs; total time=   0.7s\n[CV] END ....activation=identity, max_iter=600, solver=lbfgs; total time=   0.1s\n[CV] END ....activation=identity, max_iter=600, solver=lbfgs; total time=   0.1s\n"},"295":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"296":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=600, solver=lbfgs; total time=   0.7s\n"},"297":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"298":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=600, solver=lbfgs; total time=   0.6s\n[CV] END ......activation=identity, max_iter=600, solver=sgd; total time=   0.1s\n[CV] END ......activation=identity, max_iter=600, solver=sgd; total time=   0.1s\n"},"299":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=identity, max_iter=600, solver=sgd; total time=   0.1s\n[CV] END ......activation=identity, max_iter=600, solver=sgd; total time=   0.1s\n"},"3":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"30":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=400, solver=adam; total time=   0.9s\n"},"300":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=identity, max_iter=600, solver=sgd; total time=   0.1s\n"},"301":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=600, solver=adam; total time=   0.2s\n[CV] END .....activation=identity, max_iter=600, solver=adam; total time=   0.2s\n"},"302":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=600, solver=adam; total time=   0.2s\n"},"303":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=600, solver=adam; total time=   0.3s\n[CV] END .....activation=identity, max_iter=600, solver=adam; total time=   0.2s\n"},"304":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"305":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=800, solver=lbfgs; total time=   0.8s\n[CV] END ....activation=identity, max_iter=800, solver=lbfgs; total time=   0.0s\n[CV] END ....activation=identity, max_iter=800, solver=lbfgs; total time=   0.1s\n"},"306":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"307":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=800, solver=lbfgs; total time=   0.2s\n"},"308":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"309":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=800, solver=lbfgs; total time=   0.8s\n[CV] END ......activation=identity, max_iter=800, solver=sgd; total time=   0.1s\n[CV] END ......activation=identity, max_iter=800, solver=sgd; total time=   0.1s\n"},"31":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=400, solver=adam; total time=   0.5s\n"},"310":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=identity, max_iter=800, solver=sgd; total time=   0.1s\n[CV] END ......activation=identity, max_iter=800, solver=sgd; total time=   0.1s\n"},"311":{"name":"stdout","output_type":"stream","text":"[CV] END ......activation=identity, max_iter=800, solver=sgd; total time=   0.1s\n[CV] END .....activation=identity, max_iter=800, solver=adam; total time=   0.2s\n"},"312":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=800, solver=adam; total time=   0.1s\n"},"313":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=800, solver=adam; total time=   0.2s\n[CV] END .....activation=identity, max_iter=800, solver=adam; total time=   0.1s\n"},"314":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=800, solver=adam; total time=   0.2s\n"},"315":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"316":{"name":"stdout","output_type":"stream","text":"[CV] END ...activation=identity, max_iter=1000, solver=lbfgs; total time=   1.0s\n"},"317":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"318":{"name":"stdout","output_type":"stream","text":"[CV] END ...activation=identity, max_iter=1000, solver=lbfgs; total time=   1.1s\n"},"319":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"32":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=400, solver=adam; total time=   0.5s\n"},"320":{"name":"stdout","output_type":"stream","text":"[CV] END ...activation=identity, max_iter=1000, solver=lbfgs; total time=   1.0s\n"},"321":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"322":{"name":"stdout","output_type":"stream","text":"[CV] END ...activation=identity, max_iter=1000, solver=lbfgs; total time=   1.0s\n[CV] END ...activation=identity, max_iter=1000, solver=lbfgs; total time=   0.1s\n[CV] END .....activation=identity, max_iter=1000, solver=sgd; total time=   0.1s\n"},"323":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=1000, solver=sgd; total time=   0.1s\n[CV] END .....activation=identity, max_iter=1000, solver=sgd; total time=   0.1s\n"},"324":{"name":"stdout","output_type":"stream","text":"[CV] END .....activation=identity, max_iter=1000, solver=sgd; total time=   0.1s\n[CV] END .....activation=identity, max_iter=1000, solver=sgd; total time=   0.1s\n"},"325":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=1000, solver=adam; total time=   0.2s\n[CV] END ....activation=identity, max_iter=1000, solver=adam; total time=   0.2s\n"},"326":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=1000, solver=adam; total time=   0.3s\n[CV] END ....activation=identity, max_iter=1000, solver=adam; total time=   0.2s\n"},"327":{"name":"stdout","output_type":"stream","text":"[CV] END ....activation=identity, max_iter=1000, solver=adam; total time=   0.3s\n"},"328":{"data":{"text/plain":"{'activation': 'tanh', 'max_iter': 400, 'solver': 'adam'}"},"exec_count":49,"output_type":"execute_result"},"33":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=600, solver=lbfgs; total time=   0.5s\n"},"34":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=600, solver=lbfgs; total time=   0.5s\n"},"35":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=600, solver=lbfgs; total time=   0.7s\n[CV] END ........activation=relu, max_iter=600, solver=lbfgs; total time=   0.1s\n"},"36":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"37":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=600, solver=lbfgs; total time=   0.7s\n[CV] END ..........activation=relu, max_iter=600, solver=sgd; total time=   0.1s\n"},"38":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=relu, max_iter=600, solver=sgd; total time=   0.2s\n[CV] END ..........activation=relu, max_iter=600, solver=sgd; total time=   0.0s\n"},"39":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=relu, max_iter=600, solver=sgd; total time=   0.2s\n[CV] END ..........activation=relu, max_iter=600, solver=sgd; total time=   0.2s\n"},"4":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=200, solver=lbfgs; total time=   0.3s\n"},"40":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=600, solver=adam; total time=   0.5s\n"},"41":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=600, solver=adam; total time=   0.5s\n"},"42":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=600, solver=adam; total time=   0.6s\n"},"43":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=600, solver=adam; total time=   0.5s\n"},"44":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=600, solver=adam; total time=   0.6s\n"},"45":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=800, solver=lbfgs; total time=   0.3s\n[CV] END ........activation=relu, max_iter=800, solver=lbfgs; total time=   0.1s\n"},"46":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"47":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=800, solver=lbfgs; total time=   0.6s\n"},"48":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=800, solver=lbfgs; total time=   0.7s\n"},"49":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=800, solver=lbfgs; total time=   0.3s\n[CV] END ..........activation=relu, max_iter=800, solver=sgd; total time=   0.2s\n"},"5":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"50":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=relu, max_iter=800, solver=sgd; total time=   0.1s\n[CV] END ..........activation=relu, max_iter=800, solver=sgd; total time=   0.1s\n"},"51":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=relu, max_iter=800, solver=sgd; total time=   0.1s\n"},"52":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=relu, max_iter=800, solver=sgd; total time=   0.2s\n"},"53":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=800, solver=adam; total time=   0.5s\n"},"54":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=800, solver=adam; total time=   0.4s\n"},"55":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=800, solver=adam; total time=   0.3s\n"},"56":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=800, solver=adam; total time=   0.6s\n"},"57":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=800, solver=adam; total time=   0.6s\n[CV] END .......activation=relu, max_iter=1000, solver=lbfgs; total time=   0.1s\n"},"58":{"name":"stdout","output_type":"stream","text":"[CV] END .......activation=relu, max_iter=1000, solver=lbfgs; total time=   0.5s\n"},"59":{"name":"stdout","output_type":"stream","text":"[CV] END .......activation=relu, max_iter=1000, solver=lbfgs; total time=   0.6s\n"},"6":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=200, solver=lbfgs; total time=   0.4s\n"},"60":{"name":"stdout","output_type":"stream","text":"[CV] END .......activation=relu, max_iter=1000, solver=lbfgs; total time=   0.4s\n[CV] END .......activation=relu, max_iter=1000, solver=lbfgs; total time=   0.1s\n"},"61":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=2):\nABNORMAL_TERMINATION_IN_LNSRCH.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"62":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=1000, solver=sgd; total time=   0.2s\n"},"63":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=1000, solver=sgd; total time=   0.3s\n"},"64":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=1000, solver=sgd; total time=   0.2s\n[CV] END .........activation=relu, max_iter=1000, solver=sgd; total time=   0.2s\n"},"65":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=relu, max_iter=1000, solver=sgd; total time=   0.2s\n"},"66":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=1000, solver=adam; total time=   0.6s\n"},"67":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=1000, solver=adam; total time=   0.4s\n"},"68":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=1000, solver=adam; total time=   0.6s\n"},"69":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=1000, solver=adam; total time=   0.6s\n"},"7":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=200, solver=lbfgs; total time=   0.4s\n"},"70":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=1000, solver=adam; total time=   0.4s\n"},"71":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"72":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=200, solver=lbfgs; total time=   0.4s\n"},"73":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"74":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=200, solver=lbfgs; total time=   0.4s\n"},"75":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"76":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=200, solver=lbfgs; total time=   0.4s\n"},"77":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"78":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=200, solver=lbfgs; total time=   0.3s\n"},"79":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"8":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=relu, max_iter=200, solver=lbfgs; total time=   0.3s\n[CV] END ..........activation=relu, max_iter=200, solver=sgd; total time=   0.2s\n"},"80":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=200, solver=lbfgs; total time=   0.3s\n[CV] END ..........activation=tanh, max_iter=200, solver=sgd; total time=   0.1s\n"},"81":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=tanh, max_iter=200, solver=sgd; total time=   0.2s\n"},"82":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=tanh, max_iter=200, solver=sgd; total time=   0.2s\n[CV] END ..........activation=tanh, max_iter=200, solver=sgd; total time=   0.1s\n[CV] END ..........activation=tanh, max_iter=200, solver=sgd; total time=   0.1s\n"},"83":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"84":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=200, solver=adam; total time=   0.6s\n"},"85":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"86":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=200, solver=adam; total time=   0.5s\n"},"87":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"88":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=200, solver=adam; total time=   0.5s\n"},"89":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"9":{"name":"stdout","output_type":"stream","text":"[CV] END ..........activation=relu, max_iter=200, solver=sgd; total time=   0.1s\n"},"90":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=200, solver=adam; total time=   0.5s\n"},"91":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:692: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n  warnings.warn(\n"},"92":{"name":"stdout","output_type":"stream","text":"[CV] END .........activation=tanh, max_iter=200, solver=adam; total time=   0.5s\n"},"93":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"94":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=400, solver=lbfgs; total time=   0.7s\n[CV] END ........activation=tanh, max_iter=400, solver=lbfgs; total time=   0.2s\n"},"95":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=400, solver=lbfgs; total time=   0.1s\n"},"96":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"97":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=400, solver=lbfgs; total time=   0.6s\n"},"98":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"99":{"name":"stdout","output_type":"stream","text":"[CV] END ........activation=tanh, max_iter=400, solver=lbfgs; total time=   0.6s\n[CV] END ..........activation=tanh, max_iter=400, solver=sgd; total time=   0.1s\n"}},"pos":25,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":67,"id":"5400b8","input":"# SGD Classifier\nfrom sklearn.linear_model import SGDClassifier\nmilk_SGD = SGDClassifier(loss=\"hinge\", penalty=\"l2\", max_iter=500)\nmilk_SGD.fit(x_train, y_train)\ny_hat = milk_SGD.predict(x_test)","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":68,"id":"7408a3","input":"# Accuracy / SGD\ncomparisons = np.array(y_hat == y_test)\ncomparisons.mean()","output":{"0":{"data":{"text/plain":"0.6650943396226415"},"exec_count":68,"output_type":"execute_result"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":69,"id":"a581d8","input":"# Accuracy Score / SGD\nfrom sklearn.metrics import accuracy_score\ny_pred = y_hat\ny_true = y_test\naccuracy_score(y_true, y_pred)\n","output":{"0":{"data":{"text/plain":"0.6650943396226415"},"exec_count":69,"output_type":"execute_result"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":70,"id":"7016a8","input":"#F1 Score / SGD\nfrom sklearn.metrics import f1_score\ny_pred = y_hat\ny_true = y_test\n#f1_score(y_true, y_pred, average='macro')\nf1_score(y_true, y_pred, average='micro')\n#f1_score(y_true, y_pred, average='weighted')\n","output":{"0":{"data":{"text/plain":"0.6650943396226415"},"exec_count":70,"output_type":"execute_result"}},"pos":38,"type":"cell"}
{"cell_type":"code","exec_count":71,"id":"790dd5","input":"# Confusion Matrix / SGD\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7fcc50f06190>"},"exec_count":71,"output_type":"execute_result"},"1":{"data":{"image/png":"b257c84a75ce9670eae98ef6c93cf25223c4e49a","text/plain":"<Figure size 864x504 with 2 Axes>"},"exec_count":71,"metadata":{"image/png":{"height":415,"width":638},"needs_background":"light"},"output_type":"execute_result"}},"pos":39,"type":"cell"}
{"cell_type":"code","exec_count":72,"id":"4b8b82","input":"# Decision Tree Classification\nfrom sklearn import tree\nmilk_tree = tree.DecisionTreeClassifier()\nmilk_tree.fit(x_train, y_train)\ny_hat = milk_tree.predict(x_test)","pos":40,"type":"cell"}
{"cell_type":"code","exec_count":73,"id":"4aa58f","input":"# Accuracy / Decision Tree\ncomparisons = np.array(y_hat == y_test)\ncomparisons.mean()","output":{"0":{"data":{"text/plain":"1.0"},"exec_count":73,"output_type":"execute_result"}},"pos":41,"type":"cell"}
{"cell_type":"code","exec_count":74,"id":"a769bf","input":"# Confusion Matrix / Decision Tree\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7fcc50dabd60>"},"exec_count":74,"output_type":"execute_result"},"1":{"data":{"image/png":"632c91ee481c049c3a0d16d3df5f14a0b205eaa8","text/plain":"<Figure size 864x504 with 2 Axes>"},"exec_count":74,"metadata":{"image/png":{"height":411,"width":638},"needs_background":"light"},"output_type":"execute_result"}},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":75,"id":"2b8ea4","input":"# Gaussian Naive Bayes Classification\nfrom sklearn.naive_bayes import GaussianNB\nmilk_GNB = GaussianNB()\nmilk_GNB.fit(x_train, y_train)\ny_hat = milk_GNB.predict(x_test)","pos":43,"type":"cell"}
{"cell_type":"code","exec_count":76,"id":"c39b2d","input":"# Accuracy / GNB\ncomparisons = np.array(y_hat == y_test)\ncomparisons.mean()","output":{"0":{"data":{"text/plain":"0.9575471698113207"},"exec_count":76,"output_type":"execute_result"}},"pos":44,"type":"cell"}
{"cell_type":"code","exec_count":77,"id":"a2910e","input":"# Confusion Matrix / GNB\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7fcc50bb5f10>"},"exec_count":77,"output_type":"execute_result"},"1":{"data":{"image/png":"2ca65d66adf2bbf00cf8102d34a8c7cb8eafdf17","text/plain":"<Figure size 864x504 with 2 Axes>"},"exec_count":77,"metadata":{"image/png":{"height":411,"width":638},"needs_background":"light"},"output_type":"execute_result"}},"pos":45,"type":"cell"}
{"cell_type":"code","exec_count":81,"id":"9fdffa","input":"#Gaussian Process Kernel\nfrom sklearn.gaussian_process.kernels import ConstantKernel\nmilk_CK = ConstantKernel()\nmilk_CK.fit(x_train, y_train)\ny_hat = milk_CK.predict(x_test)","output":{"0":{"ename":"AttributeError","evalue":"'ConstantKernel' object has no attribute 'fit'","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-81-5adc71359c23>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgaussian_process\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkernels\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mConstantKernel\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mmilk_CK\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mConstantKernel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mmilk_CK\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0my_hat\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmilk_CK\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'ConstantKernel' object has no attribute 'fit'"]}},"pos":46,"type":"cell"}
{"cell_type":"code","exec_count":83,"id":"cfb23d","input":"len(milk[milk[\"Grade\"] == \"medium\"])","output":{"0":{"data":{"text/plain":"374"},"exec_count":83,"output_type":"execute_result"}},"pos":7,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":84,"id":"906499","input":"len(milk[milk[\"Grade\"] == \"low\"])","output":{"0":{"data":{"text/plain":"429"},"exec_count":84,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":86,"id":"41ea5f","input":"# MLP Classifier\nfrom sklearn.neural_network import MLPClassifier\nmilk_mlp = MLPClassifier(activation= 'tanh', max_iter= 400, solver= 'adam')\nmilk_mlp.fit(x_train, y_train)\ny_hat = milk_mlp.predict(x_test)","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":86,"id":"b5d42e","input":"# Looks at info of dataframe\nmilk.info()","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1059 entries, 0 to 1058\nData columns (total 8 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   pH           1059 non-null   float64\n 1   Temperature  1059 non-null   int64  \n 2   Taste        1059 non-null   int64  \n 3   Odor         1059 non-null   int64  \n 4   Fat          1059 non-null   int64  \n 5   Turbidity    1059 non-null   int64  \n 6   Color        1059 non-null   int64  \n 7   Grade        1059 non-null   object \ndtypes: float64(1), int64(6), object(1)\nmemory usage: 66.3+ KB\n"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":87,"id":"2a7aab","input":"# Accuracy / MLP\ncomparisions = np.array(y_hat == y_test)\ncomparisions.mean()","output":{"0":{"data":{"text/plain":"0.9245283018867925"},"exec_count":87,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":88,"id":"c233be","input":"#Confusion matrix\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7fcc50a64af0>"},"exec_count":88,"output_type":"execute_result"},"1":{"data":{"image/png":"b027a127aa18e3c44bae2db2443c279060fd833f","text/plain":"<Figure size 864x504 with 2 Axes>"},"exec_count":88,"metadata":{"image/png":{"height":411,"width":638},"needs_background":"light"},"output_type":"execute_result"}},"pos":26,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":89,"id":"a419dc","input":"# Support Vector Machine Classification\nfrom sklearn.svm import SVC\nfrom sklearn import svm\nmilk_SVM = svm.SVC(C= 1.3, degree= 1, kernel= 'linear')\nmilk_SVM.fit(x_train, y_train)\ny_hat = milk_SVM.predict(x_test)","pos":27,"type":"cell"}
{"cell_type":"code","exec_count":89,"id":"b0c88d","input":"#Training data percentage\nx_train.shape[0] / milk.shape[0]","output":{"0":{"data":{"text/plain":"0.7998111425873465"},"exec_count":89,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":90,"id":"d96697","input":"# Accuracy / SVM\ncomparisons = np.array(y_hat == y_test)\ncomparisons.mean()","output":{"0":{"data":{"text/plain":"0.8679245283018868"},"exec_count":90,"output_type":"execute_result"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":91,"id":"77e011","input":"# Confusion Matrix / SVM\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7fcc509aaa60>"},"exec_count":91,"output_type":"execute_result"},"1":{"data":{"image/png":"3d6b6476374fcb38297589cf73d805812c0e5d30","text/plain":"<Figure size 864x504 with 2 Axes>"},"exec_count":91,"metadata":{"image/png":{"height":411,"width":638},"needs_background":"light"},"output_type":"execute_result"}},"pos":31,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":92,"id":"a86490","input":"# Accuracy / MLP\ncomparisons = np.array(y_hat == y_test)\ncomparisons.mean()","output":{"0":{"data":{"text/plain":"0.8679245283018868"},"exec_count":92,"output_type":"execute_result"}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":96,"id":"f0da18","input":"# Random Forest\nfrom sklearn.ensemble import RandomForestClassifier\nmilk_RFC = RandomForestClassifier()\nmilk_RFC.fit(x_train, y_train)\ny_hat = milk_RFC.predict(x_test)","pos":20,"type":"cell"}
{"cell_type":"code","exec_count":97,"id":"4a8ba4","input":"# Accuracy / Random Forest\ncomparisions = np.array(y_hat == y_test)\ncomparisions.mean()","output":{"0":{"data":{"text/plain":"1.0"},"exec_count":97,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":98,"id":"35c0b3","input":"#Confusion matrix\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7fef90355940>"},"exec_count":98,"output_type":"execute_result"},"1":{"data":{"image/png":"0855ae903777685303fad9be0cc5e3630627eeed","text/plain":"<Figure size 864x504 with 2 Axes>"},"exec_count":98,"metadata":{"image/png":{"height":411,"width":638},"needs_background":"light"},"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"markdown","id":"6ee5ca","input":"### Just Some Data Cleansing\n\n","pos":0,"type":"cell"}
{"exec_count":22,"id":"ea151c","input":"# import plotly.express as px\n# fig = px.imshow((y_test, y_hat))\n# fig.show()","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"f55d98197a292f05e7eeefc8e09fd14bf40d8fc7"}}},"pos":18.5,"state":"done","type":"cell"}
{"id":0,"time":1661362555659,"type":"user"}
{"last_load":1661348231084,"type":"file"}